name: Python package

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install the package
      run: |
        pip install -e .
    - name: Run Main Tests
      run: |
        import numpy as np
        import icikt
        import timeit
        
        def main():
          largeArray = np.genfromtxt("test/bigTest.csv", delimiter = ",")
          
          corr, pval, tmax = icikt.icikt(largeArray[:, 0], largeArray[:, 1])
          print(corr, pval, tmax)
          
          
          out, corr, pval, tmax = icikt.iciktArray(largeArray)
          print(corr[0:5, 0:5], pval[0:5, 0:5], tmax[0:5, 0:5])
          
          np.random.seed(1234)  

        if __name__ == '__main__':
          main()
          setup_code = '''
          import icikt
          import scipy.stats
          import numpy as np
          np.random.seed(1234)
          largeArray = np.random.randn(50000, 2)'''

          icikt_code = '''
          corr, pval, tmax = icikt.icikt(largeArray[:, 0], largeArray[:, 1])'''
          
          print (timeit.timeit(setup = setup_code, stmt = icikt_code, number = 500) / 500)

          scipy_code = '''
          corr, pval = scipy.stats.kendalltau(largeArray[:, 0], largeArray[:, 1])'''

          print(timeit.timeit(setup = setup_code, stmt = scipy_code, number = 500) / 500)
          
      shell: python
